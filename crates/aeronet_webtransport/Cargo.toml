[package]
description = "WebTransport IO layer implementation for aeronet"
name = "aeronet_webtransport"

authors.workspace = true
categories.workspace = true
edition.workspace = true
keywords.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true
version.workspace = true

[lints]
workspace = true

[package.metadata.docs.rs]
all-features = true
rustflags = ["--cfg=web_sys_unstable_apis"]
targets = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]

[features]
client = []
server = []

dangerous-configuration = ["wtransport/dangerous-configuration"]

[dependencies]
aeronet_io = { workspace = true }

anyhow = { workspace = true }
base64 = { workspace = true }
bytes = { workspace = true }
cfg-if = { workspace = true }
futures = { workspace = true }
replace_with = { workspace = true }
thiserror = { workspace = true }
tracing = { workspace = true }
xwt-core = { workspace = true }

bevy_app = { workspace = true }
bevy_ecs = { workspace = true }
bevy_hierarchy = { workspace = true }
bevy_reflect = { workspace = true }

[target.'cfg(target_family = "wasm")'.dependencies]
gloo-timers = { workspace = true, features = ["futures"] }
js-sys = { workspace = true }
wasm-bindgen = { workspace = true }
wasm-bindgen-futures = { workspace = true }
xwt-web-sys = { workspace = true }

[target.'cfg(not(target_family = "wasm"))'.dependencies]
spki = { workspace = true, features = ["fingerprint"] }
tokio = { workspace = true, features = ["rt-multi-thread"] }
wtransport = { workspace = true }
x509-cert = { workspace = true }
xwt-wtransport = { workspace = true }

[dev-dependencies]
bevy = { workspace = true }
bevy_egui = { workspace = true }

[[example]]
name = "webtransport_client"
path = "examples/webtransport_client.rs"
required-features = ["client"]

[[example]]
name = "webtransport_echo_server"
path = "examples/webtransport_echo_server.rs"
required-features = ["server"]
