[package]
description = "IO abstraction primitives for `aeronet`"
name = "aeronet_io"
version = "0.12.0"

authors.workspace = true
categories.workspace = true
edition.workspace = true
keywords.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true

[lints]
workspace = true

[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]

[features]
default = ["std"]

## Enables [`portable-atomic/critical-section`][cs], used for targets without native atomic CAS.
##
## [cs]: https://docs.rs/portable-atomic/latest/portable_atomic/
critical-section = [
  "bevy_ecs/critical-section",
  "bevy_platform_support/critical-section",
  "bytes/extra-platforms",
]

## Enables standard library support.
std = ["anyhow/std", "bytes/std", "log/std", "bevy_platform_support/std"]

[dependencies]
anyhow = { workspace = true }
bytes = { workspace = true }
derive_more = { workspace = true, features = [
  "display",
  "error",
  "add",
  "add_assign",
  "deref",
] }
log = { workspace = true }

bevy_app = { workspace = true, features = ["bevy_reflect"] }
bevy_ecs = { workspace = true, features = ["bevy_reflect"] }
bevy_platform_support = { workspace = true, features = ["alloc"] }
bevy_reflect = { workspace = true }
