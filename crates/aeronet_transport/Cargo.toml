[package]
description = "Transport layer implementation for `aeronet`"
name = "aeronet_transport"
version = "0.12.0"

authors.workspace = true
categories.workspace = true
edition.workspace = true
keywords.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true

[lints]
workspace = true

[package.metadata.docs.rs]
all-features = true

[package.metadata.cargo-machete]
ignored = [
  "bevy_winit", # see `document-features`
]

[features]
## Allows serializing and deserializing some types with [`serde`].
##
## [`serde`]: https://docs.rs/serde
serde = ["dep:serde"]

## Allows using the `visualizer` module, which draws session statistics using [`bevy_egui`] and
## [`egui_plot`].
##
## [`bevy_egui`]: https://docs.rs/bevy_egui
## [`egui_plot`]: https://docs.rs/egui_plot
visualizer = [
  "dep:bevy_egui",
  "dep:egui_plot",
  "dep:itertools",
  "dep:size_format",
  "dep:thousands",
]

## Enable this when generating docs.
document-features = [
  "dep:document-features",
  # "Wait - why the hell does `document-features` enable `bevy_winit`!?!?"
  #
  # Without this, generating docs with `cargo doc --all-features` will fail because of a specific
  # combination of factors:
  # - `--all-features` enables `visualizer`, which enables `bevy_egui`
  # - `bevy_egui` depends on `bevy_winit`, which depends on `winit`
  # - `winit` will fail to compile if there are no backends that it can use
  # - On Linux, you must explicitly enable `x11` or `wayland` to tell `winit` which backend to use
  # - When compiling the entire workspace, `bevy` enables `x11` by default. But when only compiling
  #   this crate, we don't depend on `bevy`, so we never enable any of the backends.
  # - Compile error!
  #
  # To get around this, when generating docs, we manually enable the `x11` feature.
  "dep:bevy_winit",
  "bevy_winit/x11",
]

[dependencies]
aeronet_io = { workspace = true }

ahash = { workspace = true }
arbitrary = { workspace = true }
bitvec = { workspace = true }
derive_more = { workspace = true }
either = { workspace = true }
octs = { workspace = true }
ringbuf = { workspace = true }
tracing = { workspace = true }
typesize = { workspace = true, features = [
  "bitvec",
  "web-time",
  "saturating_impls",
] }
web-time = { workspace = true }

bevy_app = { workspace = true }
bevy_core = { workspace = true }
bevy_derive = { workspace = true }
bevy_ecs = { workspace = true }
bevy_reflect = { workspace = true }
bevy_time = { workspace = true }

serde = { workspace = true, optional = true }

bevy_egui = { workspace = true, optional = true }
egui_plot = { workspace = true, optional = true }
itertools = { workspace = true, optional = true }
size_format = { workspace = true, optional = true }
thousands = { workspace = true, optional = true }

bevy_winit = { workspace = true, optional = true }
document-features = { workspace = true, optional = true }
